{"meta":{"title":"RPi Hub","subtitle":"","description":"","author":"Copcin","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"树莓派折腾001：用树莓派搭建低功耗服务器并运行 Typecho","slug":"树莓派折腾001：用树莓派搭建低功耗服务器并运行-Typecho","date":"2022-04-11T03:17:14.000Z","updated":"2022-04-11T04:54:40.232Z","comments":true,"path":"2022/04/11/树莓派折腾001：用树莓派搭建低功耗服务器并运行-Typecho/","link":"","permalink":"http://example.com/2022/04/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8A%98%E8%85%BE001%EF%BC%9A%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%BD%8E%E5%8A%9F%E8%80%97%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E8%BF%90%E8%A1%8C-Typecho/","excerpt":"","text":"你现在看到的可能就是我建的博客之一。我作为一个折腾π，自然折腾了很多博客。像 CSDN，GitHub Pages 等等我都有建。但美中不足的是，CSDN 的博客可定制性差，GitHub Pages 又只是静态页面，反正各有各的缺点。目前我折腾过的感觉最满意的，就是在树莓派上建的 Typecho 博客了~ 用树莓派建的博客有三大好处： 1 是动态博客。可以在线编辑 Markdown （但我觉得用 Typora 线下编辑器比线上编辑体验更好，就是上传有点麻烦，希望 Typecho 作者能把 Typora 集成进 Typecho ~），而且可以在线评论； 2 服务器低功耗。想想，一张信用卡大小的电脑，功耗自然低得离谱； 3 一派多用。在一台搭载了 Typecho 的树莓派上，你也可以做其它事情，比如玩 Minecraft Pi Edition，让树莓派电量的 “ 性价比 ” 最高。 废话不多说，开始搭建~ —————————正文———————— 1. 服务器操作系统选择个人觉得，在树莓派上运行 Windows Server vNext 2022 是最佳的选择，因为树莓派 4B 的性能跑 Server vNext 刚好够。Server vNext 也不会像 Windows 10 &#x2F; 11 on ARM 一样臃肿，属于 “ 该有的都有，不该有的都没有 ”，而且最吸引人的是，Server vNext 基于 Windows 11 ! 虽然 4B 也可以跑完整版的 11，但是性能差了太多了。我在一台老旧的 Panasonic CF-W7 设备（出厂 XP ）的我爸不要的机子上分别运行了完整版 11 和 Server vNext，结果 Server vNext 比 XP 还流畅，11 卡成 PPT~ 我上 UUP dump 上馊了 vNext arm64 版，结果还真搜到了，但是点进去，发现没有可用语言（T_T）但是源码包是有的，感兴趣的童鞋可以折腾折腾~ （路人甲：前面讲了那么多 vNext 的好处，最后竟然不能用……） 没办法，我们只能退而求其次，这里提供两种方案：第一种是装 Raspbian，稳定流畅；第二种是装 Ubuntu Desktop 22.04 LTS，单说 UI 做的就比 Raspbian 好了（不过我还是选择 Raspbian，因为我还要折腾 MC 呢！） 至于怎么装，老派应该都不用说了吧…… 2. 安装 Typecho先更新软件源： 1sudo apt-get update &amp;&amp; sudo apt-get upgrade 然后安装依赖： 1sudo apt-get install apache2 php php-curl sqlite3 php-sqlite 启动 Apache 服务： 1sudo /etc/init.d/apache2 restart 安装 Typecho： 12345cd /var/www/htmlsudo wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gzsudo tar zxvf 1.1-17.10.30-release.tar.gzsudo mv build/* /var/www/htmlsudo chmod 777 /var/www/html -R 随后打开 Chromium，地址栏输入 localhost，进行一些初始配置，就可以用了~ 博客的管理页面在 localhost&#x2F;admin，登录之后就可以在里面写博，查看数据等； 3. Typecho 500 的解决办法经常给派重装系统，重装了之后安装 Typecho，就发现，500 了！ 上面显示 Database Server Error，实际上不是数据库的问题，是权限的问题！ 打开终端，输入： 1sudo chmod 777 /var/www/html -R 给 Typecho 所有权限，应该就可以了（其实上面安装的时候已经给过了） 如果实在不行，只有重装系统了（T_T）、 4. 让 Typecho 变得更好首先我们要解决的第一个问题就是：怎么让别人看得见你的博客。 首先，你要去买一个域名，然后把域名绑定上去，具体自己百度； 或者，也有不要钱的方法：使用花生壳或 ngrok 进行内网穿透~ 第二个问题，就是如何让 Typecho 变得好看。 其实官方的主题并不丑，但是我们想要让 Typecho 更个性化，这样才能实现 Typecho 的价值，要不全去 CSDN 和博客园了，毕竟他俩的 SEO 天下谁能匹敌呢？ 可以去 typecho.me 选择主题，并下载，主题切换教程可以百度。 最后，祝你们在 Typecho 上写出优质的博客~","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手006：轻量编辑器 Sublime Text","slug":"树莓派入手006：轻量编辑器-Sublime-Text","date":"2022-04-06T10:15:36.000Z","updated":"2022-04-06T12:12:29.372Z","comments":true,"path":"2022/04/06/树莓派入手006：轻量编辑器-Sublime-Text/","link":"","permalink":"http://example.com/2022/04/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B006%EF%BC%9A%E8%BD%BB%E9%87%8F%E7%BC%96%E8%BE%91%E5%99%A8-Sublime-Text/","excerpt":"","text":"只有一台树莓派的我偏偏又是一个程序员（不过还在学习中），由于我是和 Win 8 一个时间出生的，自然是忍受不了 Vim 和 nano 这种编辑器。于是我就开始了 IDE 的试用之路。试用了 Eclipse、VS Code、Thonny、Geany 等 IDE，最后最满意的是 Sublime Text～ ————————–正文—————————- 1. Sublime Text 简介Sublime Text 是一款轻量级的 IDE，它几乎支持市面上所有语言！（当然写 Java 还是要用 IDEA 这些专业 IDE）它功能强大，界面简洁，最亮眼的是它对配置几乎没有要求，一台树莓派 Zero 2 W 都能跑得起来！ 在 Sublime Text 3 之前的版本，它是不支持树莓派的 ARM 架构的。也亏 Sublime Text 的作者良心，在 Sublime Text 4，作者终于把 Sublime Text 的阳光照进了树莓派～ 树莓派 IDE 选择 Sublime Text 的三大理由： 1 对配置要求极低 就拿我家的 4B 来说吧，VS Code，Eclipse，IDEA 这些大 IDE 都跑得起来，但是一个比一个性能差。树莓派顶配跑这些 IDE 都卡成 PPT； 2 功能轻量实用 我个人觉得对于自己的小型开发，上述那些大 IDE 都太过臃肿了。很多功能都是自己用不上，又占内存的。相比之下，Sublime Text 这种轻量级的 IDE 可以说是“该有的都有，该没有的都没有”，功能轻量实用； 3 UI 简洁美观 我是一个简洁癖，任何东西只要做的有一点“赘肉”我都不能接受，就像 Visual Studio（IDEA 虽然没有 VS 那么严重，但是也是“重灾区”）Sublime Text 的 UI 不仅简洁，还美观，真的是开发者们的一大福音。 最后上价格：99$ 童鞋们不要惊慌，如果有钱可以支持一下正版，如果没钱也可以光明正大的白嫖，因为官方提供无限试用，只是不能升级，有时会给你弹个购买 Sublime Text 的窗，对使用毫无影响（要是 ST 是国产，按照这个水平，早就成 SSSSSSVIP 才能用的了） 2. Sublime Text 安装去 Sublime Text 下载页，点击蓝色的 ARM64 开始下载。下载完把压缩文件移到 &#x2F;opt 目录，tar -xjvf 文件名，然后把解压下来的目录改名为 sublime_text，最后进入目录，把 .desktop 后缀的文件移到 &#x2F;usr&#x2F;share&#x2F;application 目录下（怎么有点 bash 期末考那味了） 按下 Windows 徽标键，你应该就能看见在某个目录下藏着 Sublime Text 了～ 汉化及安装 view in browser 插件见这篇文章：点击进入 3. 用 Sublime Text 写代码Sublime Text 自身集成了常用语言的语法高亮，如 Python，前端三件套，C&#x2F;C++ 等，算是功能很全面了。童鞋们可以把它设为自己的默认编辑器（在心里设） 有一些扩展是装 Sublime Text 必备的。我在网上找了一篇文章，里面的扩展建议全装上，文章链接 希望童鞋们在 fu 年用 Sublime Text 写代码能如 fu 添翼！","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手005：终端编辑器 nano","slug":"树莓派入手005：终端编辑器-nano","date":"2022-04-02T00:00:00.000Z","updated":"2022-04-06T08:08:26.867Z","comments":true,"path":"2022/04/02/树莓派入手005：终端编辑器-nano/","link":"","permalink":"http://example.com/2022/04/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B005%EF%BC%9A%E7%BB%88%E7%AB%AF%E7%BC%96%E8%BE%91%E5%99%A8-nano/","excerpt":"","text":"由于我使用 Linux 仍然遵循 Windows 的使用习惯，使用 GUI 界面（这句话怎么听着那么耳熟呢，是不是上次才用过），所以我很少使用终端。很多人习惯用终端的 Vim 编辑器，功能强大。但对于我这种“能不用终端就不用终端”的人，Vim 有点大材小用了。今天要介绍的 nano 编辑器也是一款 Linux 下的常用编辑器，但它上手极其简单，用着比 Vim 舒适太多了~ ———————-正文———————- 1. 准备一般的 Linux 都有预装 nano，如果没有的 apt 下载下： 12sudo apt-get update &amp;&amp; sudo apt-get upgradesudo apt-get install nano 然后就没了~ 2. 基本使用2.1 打开文件用 nano 编辑器打开一个文件： 1(sudo) nano 文件名 怎么样，是不是非常简洁~ 2.2 快捷键进入 nano 后，界面也是非常简洁，上方一个输入栏，下面一个快捷键提示栏（对于我这种简洁癖 nano 真的是太舒适了） nano 快捷键一览（其实 nano 下方就有）： 获得帮助：Ctrl+G 复制一整行：Alt+6 剪切一整行：Ctrl+K 粘贴：Ctrl+U 搜索：Ctrl+W 上一页：Ctrl+Y 下一页：Ctrl+V 保存：Ctrl+O 退出：Ctrl+X 看着很多（Vim：你管这叫多？）？实际要用的就一个：Ctrl + X 保存退出~ 详细可以参考 nano官方文档 及 这篇文章（打开比较慢） 2.3 使用三部曲用 nano 编辑文件三部曲： 1. 打开文件 用 (sudo) nano 文件名打开文件，如果是系统文件或其它需要 root 权限才能打开的文件要加 sudo； 2. 编辑文件 这没什么要说的吧，跟普通编辑器差不多~ 3. 保存退出 Ctrl+X，输入y回车，回车就行了！ 2.4 用 NANO 写代码如果你是一个终端重度患者，那么也不一定要用 Vim，一个小巧轻便的 nano 其实就可以满足你所有的需求。 用 nano 写代码没有丝毫问题，因为它支持市面上几乎所有流行的编程语言语法高亮！ 当然如果有桌面环境，用 nano 码代码的机会不是很多~ 下次会介绍在树莓派 GUI 界面的几款好用的 IDE，敬请期待！","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手004：终端基本命令","slug":"树莓派入手004：终端基本命令","date":"2022-03-31T08:00:00.000Z","updated":"2022-04-06T11:37:57.969Z","comments":true,"path":"2022/03/31/树莓派入手004：终端基本命令/","link":"","permalink":"http://example.com/2022/03/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B004%EF%BC%9A%E7%BB%88%E7%AB%AF%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/","excerpt":"","text":"虽然我使用 Linux 系统仍然保留 Windows 的习惯：使用 GUI 界面，但是终端的基本命令还是不能丢（敲黑板那，别睡着） 下文就带你整理一些常用的终端命令（Raspbian，Debian，Ubuntu 通用） 不用全部背，想用的时候就查，慢慢的就会了（玄学警告） ————————–正文————————– 1. 提权命令由于很多时候进行的操作都是只有 root 用户才能做的，如下载软件，所以要进行提权~ 如果要实现单语句提权，只要在语句前面加 sudo (superuser do) 就可以，如下面： 1sudo apt-get install python3-pip 如果要实现多语句提权，则可以以 root 身份登录终端，只需一行代码： 1sudo -i 如果使用 Ubuntu 系统，可能会提示你输入密码，输就行，由于安全原因，输入的密码不会显示出来，盲输就行~ 以 root 身份登录终端后，想做平时需要 sudo 的事就不需要 sudo 了。 2. 文件操作命令新建一个文件： 1touch 文件名 输出一个文件里所有的内容： 1cat 文件名 将一行文本追加到文件内： 1echo 内容 &gt;&gt; 文件名 删除文件： 1rm 文件名 移动文件（这里以 1.txt 为例）： 1sudo mv /home/pi/1.txt /opt/1.txt 重命名文件（其实都是 mv 命令）： 1mv 1.txt 2.txt 3. 目录操作命令新建一个目录： 1mkdir 目录名 转到一个目录下： 1cd 目录名 列出当前目录下的文件： 1ls 删除一个目录： 1rm -r 目录名 4. 文本操作命令输出一行文本： 1echo 内容 查找当前目录下名字带有xxx的文件&#x2F;目录： 1ls | grep xxx 5. 压缩&#x2F;解压命令压缩一些文件为 .zip 压缩包： 1zip xxx.zip 文件1 文件2 解压缩 .zip 压缩包： 1unzip xxx.zip 压缩一些文件为 .tar.gz 压缩包： 1tar -zcvf xxx.tar.gz 文件1 文件2 解压缩 .tar.gz 压缩包： 1tar zxvf xxx.tar.gz PS：如果报错先安装 zip 及 unzip： 1sudo apt-get install zip unzip 6. 软件操作命令更新软件源： 1sudo apt-get update 更新现有的软件： 1sudo apt-get upgrade 安装新软件（这里以 pip 为例）： 1sudo apt-get install python3-pip 保持一个好习惯：安装软件前先 sudo apt-get update &amp;&amp; sudo apt-get upgrade 卸载软件： 1sudo apt-get uninstall python3-pip 卸载软件并删除配置文件： 1sudo apt-get purge python3-pip 使用 deb 包安装软件： 1sudo dpkg -i xxx.deb 7. 网络操作命令查看自己网络的信息： 1ifconfig 下载文件： 1wget 文件地址 得到一个网站的 IP 地址： 1ping 网站域名 SSH 连接一台在同局域网内的计算机： 1ssh 计算机 IP 地址 8. 其它查看电脑基本信息： 1uname -a 查看内存信息： 1free -h 树莓派配置（Raspbian 专用）： 1sudo raspi-config 这里只整理了一些常用的命令，它们只能维持让你看到 Linux 终端不头昏脑胀（啊这……） 想了解更多命令，这里推荐一个 Linux 命令“字典”：点击进入，很好用，对于想深入学习 Linux 的童鞋很有用~","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手003：换源","slug":"树莓派入手003：换源","date":"2022-03-31T00:00:00.000Z","updated":"2022-04-06T08:10:14.860Z","comments":true,"path":"2022/03/31/树莓派入手003：换源/","link":"","permalink":"http://example.com/2022/03/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B003%EF%BC%9A%E6%8D%A2%E6%BA%90/","excerpt":"","text":"众所周知，Linux 系统如果不换源，下载软件的速度有一点经验的人是知道的，几十 KB&#x2F;s 的速度，谁受得了啊（T_T） 下面，我就为大家整理了树莓派全系列 Linux 系统镜像源合集。可以说，在下面，没有你找不到的源~ （本文的源都是清华源） 1. Debian系列本源可用系统：官方 Raspbian，Debian，Debian Pi Aarch64 及所有 Debian 衍生系统~ 基于 Debian 11： 1234567891011# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free 基于 Debian 10： 1234567891011# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free 基于 Debian 9： 1234567891011# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ stretch-backports main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security stretch/updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security stretch/updates main contrib non-free 基于 Debian 8： 12345678# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/debian/ jessie main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ jessie main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian/ jessie-updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ jessie-updates main contrib non-freedeb https://mirrors.tuna.tsinghua.edu.cn/debian-security jessie/updates main contrib non-free# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security jessie/updates main contrib non-free 2. Ubuntu系列本源可用系统：Ubuntu Desktop，Ubuntu Server，Ubuntu Mate 及所有 Ubuntu 衍生系统 Ubuntu 22.04 LTS： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ jammy-proposed main restricted universe multiverse Ubuntu 21.10： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ impish-proposed main restricted universe multiverse Ubuntu 21.04： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ hirsute-proposed main restricted universe multiverse Ubuntu 20.04 LTS： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse Ubuntu 18.04 LTS： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ bionic-proposed main restricted universe multiverse Ubuntu 16.04 LTS： 12345678910111213# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports/ xenial-proposed main restricted universe multiverse 3. Arch Linux适用系统：Arch Linux 编辑 &#x2F;etc&#x2F;pacman.d&#x2F;mirrorlist， 在文件的最顶端添加： 1Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/$arch/$repo 更新软件包缓存： 1sudo pacman -Syy 4. Fedora适用系统：Fedora 由于没用过 Fedora，Fedora 用户可参考清华源官方使用帮助：点击进入； 附：Debian + Ubuntu 用户换源方法确定你的 Debian &#x2F; Ubuntu 版本，在上方找到相应的源并全部 Copy~ 打开终端，输入以下内容打开 sources.list： 1sudo nano /etc/apt/sources.list 把原文全部 # 号注释掉，然后把刚刚 Copy 的内容 Paste 过去，然后 Ctrl + X 保存退出； 输入以下内容更新软件源： 1sudo apt-get update 这样，你 apt-get 软件的时候就可以以 5MB&#x2F;s 的速度畅快下载啦~","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手002：软件选择","slug":"树莓派入手002：软件选择","date":"2022-03-30T08:00:00.000Z","updated":"2022-04-06T07:51:43.063Z","comments":true,"path":"2022/03/30/树莓派入手002：软件选择/","link":"","permalink":"http://example.com/2022/03/30/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B002%EF%BC%9A%E8%BD%AF%E4%BB%B6%E9%80%89%E6%8B%A9/","excerpt":"","text":"当你有了适合自己的硬件之后，就要考虑考虑给自己的树莓派装什么系统了。一个好的硬件和一个好的系统，所得的效果是 1+1&gt;2 的。这篇博客就来带大家选择自己的软件~ ————————-正文———————– 1. 选择系统这里贴出一些我折腾过的系统，且体验不错的~ 1.1 官方 RASPBIAN下载地址：点击下载（下载时请选择日期最晚的文件夹里面最大的 .zip 文件下载） 树莓派官方 64 位系统，基于 Debian，体验不错，而且兼容性很好，树莓派 64 位 CPU 全系列支持~ 特别推荐树莓派 Zero 2 W 和 2B 用户使用~ 1.2 UBUNTU DESKTOP下载地址：点击下载 一款用户体验很好的系统，全新 21.10 版本支持树莓派，只不过 Zero 系列及 2B，3B会有一点卡~ 1.3 DEBIAN PI AARCH64下载地址：点击下载 同样也是款体验很好的系统，仿 macOS Mojave，用过 Mac 的人可能会觉得非常舒适~ 1.4 WINDOWS ON ARM在树莓派上体验完整版 Windows 的一种完美的办法， 就是对系统要求有点高，树莓派 4B 4GB&#x2F;8GB 内存 &#x2F; 400 才能跑起来，3B 就已经卡成 PPT~ 想安装可以参考我之前写的一篇博客：点击访问 此外还有 Ubuntu Mate，CentOS，Arch Linux 等系统，由于系统体验没有上述三个那么好，在此不再赘述~ 2. 安装系统给树莓派安装系统其实很容易，安装下面给出的三部曲就可以~ 2.1 下载镜像这步就不用说了吧，去前面给的链接下载； 2.2 烧录镜像下载 balenaEtcher 镜像烧录工具，选择名字格式为 balenaEtcher-Setup-x.x.x.exe 的下载~ 下载完安装一路 Next，安装完打开~ 第一个栏选择自己的镜像； 第二个栏选择读卡器； 点击 Flash，开始烧录； 等待一会儿，如果提示成功，就说明烧录成功了！（提示成功的意思还要你解释吗（0-0）） 2.3 插进树莓派，进行初始化配置弹出读卡器，把卡插进树莓派的 TF 卡插槽，接上电，如果是 Raspbian 系统，那么等个一分钟就可以用了；如果是 Ubuntu Desktop 系统，需要进行一些初始化配置；如果是 Debian Pi Aarch64，要等上一会儿，系统要重启三次~ 接下来的时间就可以愉快食用啦~","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]},{"title":"树莓派入手001：硬件选择","slug":"树莓派入手001：硬件选择","date":"2022-03-30T00:00:00.000Z","updated":"2022-04-06T07:39:55.863Z","comments":true,"path":"2022/03/30/树莓派入手001：硬件选择/","link":"","permalink":"http://example.com/2022/03/30/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E6%89%8B001%EF%BC%9A%E7%A1%AC%E4%BB%B6%E9%80%89%E6%8B%A9/","excerpt":"","text":"Hello ! 本人是一个树莓派爱好者，入手树莓派也只不过两三年。在此我想把这两三年的经验整理在这个博客上，供大家参考~ 先从机型开始~ ———————————-正文———————————- 1.树莓派简介Raspberry Pi(中文名为“树莓派”,简写为RPi，(或者RasPi &#x2F; RPI) 是为学习计算机编程教育而设计，只有信用卡大小的微型电脑（来自百度百科）它虽然外表很小，但其实“内心”强大，可以说是普通电脑有的东西它全部都有~ 这里给一个建议：只要懂一点电脑基础的人都建议入手树莓派。如果不想折腾，你可以把它当作一台可移动台式机；如果你是一名像我一样爱折腾的人，那树莓派更是你巨大的福音，用一个小千块的小玩意儿，你就可以体验市面上几乎所有Linux系统，如果你愿意，你甚至可以在上面跑 Windows，性能吊打 AMD！ （不是Windows IoT的阉割版！）~ 2.树莓派型号选择听了上面的建议，是不是很心动~ （路人甲：那就赶紧去某宝买吧）不要像前面那位憨仔兴冲冲的就去买了，被坑了你都不知道~ 下面让大家先选择一下自己喜欢的派，再来买会好狠多~ 注意，买派一定只买单主板，防被坑！！！ 下面是我个人推荐的型号~ 2.1 树莓派 4B首推，也是现在主流的派，老少皆宜~ 废话不多说，上参数~ CPU: BCM 2711，4 核，1.5 GHz， ARM 64 架构 内存：1GB，2GB，4GB，8GB 可选 GPU：500 MHz VideoCore VI （由于不玩大型游戏，对 GPU 不怎么了解） 视频输出：Micro HDMI *2 （这款派的一个槽点） USB：USB 3.0 *2 + USB 2.0 *2 （怎么样，接口豪不豪华） WiFi：2.4G &#x2F; 5G （敲黑板，不是5G手机的那个5G，是5GHz） 以太网：千兆以太网 蓝牙：5.0 GPIO：40针GPIO 电源：Type-C (5V 3A)（就是普通的安卓电源，及 iPad Air &#x2F; Pro 电源） 接下来是接口： Type-C 电源 *1 Micro HDMI *2 圆头耳机口 *1（我也不知道学名叫什么） USB 3.0 *2 USB 2.0 *2 以太网接口 *1 40 针 GPIO *1 SDHC &#x2F; SDXC 插槽 *1 怎么样，顶配不顶配~ 而且这么多接口的总价起步才 800 多~ 个人建议普通使用选这个，具备和普通电脑一样强悍的实力~ 至于内存，1GB不用想，如果想买1G的 4B，还真不如买后面的 400 雪赚~ 2GB 最低要求，当然要你不爱折腾； 4GB 一般要求，能跑 Windows； 8GB 推荐购买，性能吊打 AMD~ 最后上价格（某宝） 2GB：808 RMB； 4GB：918 RMB； 8GB：1088 RMB 2.2 树莓派 400如果你觉得树莓派 4B 的价格太过昂贵（你是在瞧不起人吗），那么树莓派 400 是一个很不错的选择，毕竟，它比同内存的 4B 便宜了一半，也是个不错的选择。 400 外观上是一台键盘（我没用过 400，但在 400 上打字不会烫手吗，毕竟顶配 4B 跑 Win 10 CPU 温度差不多是在 92 ℃ 左右，烤肉足够了（加了风扇那就不一样了，只有 50 多 ℃）） 400 总体参数与 4B 差不多。这里列举几个不同的地方： 内存固定 4GB （拜托这已经很多了）； CPU 主频提升至 1.8 GHz； USB 2.0 接口从两个减到一个； 少了耳机口~ 其它都没变。最抢眼的是它的价格： RMB 535 对于一个跑 Windows 毫无压力的电脑来说，这价格可太抢手了~ 2.3 树莓派 ZERO 2 W如果树莓派 400 的价格还是太过高昂（你这就有点过分了），那树莓派 Zero 2 W 或许更适合你。 先上参数~ CPU: BCM2710A1 4核 1GHz ARM 64 架构 内存：0.5 GB 视频输出：Mini HDMI *1 USB： Micro USB 2.0 *1 WiFi：2.4G 以太网：无接口 蓝牙：4.2 GPIO：40针GPIO 电源：Micro USB 然后接口： Micro USB 2.0 *1（一个 Micro USB 口是明显不够的，推荐买个 OTG + USB Hub，二三十块，可以 1 变 4 甚至更多）； Mini HDMI *1（这点比 4B 做的好）； 40 针 GPIO *1； Micro USB 电源 *1； SDHC &#x2F; SDXC 插槽 *1 总体来说接口还是挺丰富，就是 0.5 GB 的内存有点少得可怜。不管了，上价格： RMB 440 所以说，但凡有一点点预算，都建议买 400~ 如果实在要买，记得买已焊接排针的~ 3.树莓派 TF 卡选择TF 卡，全称 Micro SD 卡，也称 T-Flash 卡。它相当于树莓派的磁盘。树莓派的系统就是装在 TF 卡上的。所以你可以买多张 TF 卡用来多系统~ 划重点：给树莓派买 TF 卡一定要买闪迪的！！！ 为什么说买卡一定要闪迪的呢，不是因为我是闪迪的广告人员，是因为不是闪迪的，系统刷不进 TF 卡！！！ 我曾经遇到过一件事，买卡图便宜买了杂牌的，结果刷了n次系统愣是刷不进去，气得我原地把 TF 卡掰成两半~ TF 卡型号买 SanDisk Ultra，因为这个型号的 TF 卡的读写速率刚好，Class 10，价格也不会很贵，跟杂牌的就差几块钱~ 至于卡的容量大小，在下面给出建议： 3.1 16G对于树莓派的TF卡，16G是最低要求。当然要不爱折腾的人才买16G~ 16G可装系统（这里推荐的系统都是运行起来流畅度可以的）： 树莓派官方 Raspbian； Ubuntu MATE； 对于只有 16G TF卡却想装 Windows 的人来说，除非你能忍受树莓派卡成 PPT~ 价格：28.9 RMB 3.2 32G32G TF卡是爱折腾的人的一个实惠的选择，它的价格只比 16G 多了几块钱，但可装系统规模明显大了很多~ 树莓派官方 Raspbian； Ubuntu MATE； Ubuntu Desktop； FydeOS （收费）； CentOS Linux； CentOS Stream； Debian Pi Aarch64； …… 价格：31.90 RMB 3.3 64G首推，价格实惠，性能超群！ 基本上世面上有的系统它都能装，包括 Windows~ 价格：50.9 RMB 3.4 128G及以上128G 以上的 TF 卡价格就比较 Expensive 了，但会带给你更丝滑的树莓派体验。 树莓派最高支持 1TB 的 TF 卡，存几百部电影不是问题~ 价格： 128G：79.8 RMB 256G：180.9 RMB 400G：309 RMB 512G：379 RMB 1TB：909 RMB 4.其他硬件选择必选型： 亚克力外壳：11.5 RMB 树莓派必须要有外壳，要不然磕磕碰碰或掉进小异物都会影响正常运行！ 散热片：14.5 RMB 树莓派散热的一种Good Way~ 小风扇：4.4 RMB 如果你不想在使用派的时候送你一股烧焦的味道+黑屏，建议买一个小风扇~ Micro HDMI &#x2F; Mini HDMI 转标准 HDMI 线：26.9 RMB 必需品，记得买官方原装~ 12 寸显示器：219 RMB 作为树莓派的显示器，个人觉得12寸是最佳尺寸~ 2.4G 无线键鼠：48 RMB 键盘鼠标建议选 2.4G USB 连接的，如果蓝牙的比较麻烦。当然 400 自带键盘~ 可选型： USB Hub：24 RMB 让 USB 1 变 4 的 Good Way~ 摄像头：14 RMB OpenCV 必选~ 硬件全家桶：价格未知 由于不搞硬件，所以这个我不做评价~ 5.参考我的选择贴在下面，供大家参考~ 树莓派 4B 8GB； 32G + 128G TF 卡双系统； 全部必选硬件 共计：1524 RMB 怎么样，便宜不便宜？（弹幕君：ohhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh～","categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]}],"categories":[],"tags":[{"name":"树莓派","slug":"树莓派","permalink":"http://example.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"}]}